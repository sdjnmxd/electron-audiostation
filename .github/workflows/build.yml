name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: macos-latest
            arch: x64
            platform: mac
          - os: macos-latest
            arch: arm64
            platform: mac
          - os: windows-latest
            arch: x64
            platform: win
          - os: ubuntu-latest
            arch: x64
            platform: linux
    
    steps:
      - name: 检出代码仓库
        uses: actions/checkout@v4
      
      - name: 设置 Node.js 环境
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: 安装依赖
        run: npm ci
      
      - name: 构建 Electron 应用
        shell: bash
        run: npm run make -- --arch=${{ matrix.arch }}
        env:
          ELECTRON_ARCH: ${{ matrix.arch }}
      
      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ matrix.arch }}-build
          path: out/make/**/*
          if-no-files-found: error
  
  publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: 检出代码仓库
        uses: actions/checkout@v4
      
      - name: 下载所有构建产物
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: 显示下载文件结构
        run: find artifacts -type f | sort
      
      - name: 从标签提取版本号
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: 创建发布
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            artifacts/**/*-*.dmg
            artifacts/**/*.exe
            artifacts/**/*-*.zip
            artifacts/**/*.deb
            artifacts/**/*.rpm
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 